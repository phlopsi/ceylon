<project name="Ceylon module-resolver module" default="publish" basedir=".">

    <property file="../user-build.properties"/>
    <property file="../common-build.properties"/>
    <property file="../lib/build.properties"/>
    <property file="build.properties"/>

    <!-- The Java source files for the module-resolver -->
    <property name="cmr-api.src" location="${basedir}/api/src/main/java"/>
    <property name="cmr-api.resources" location="${basedir}/api/src/main/resources"/>
    <property name="cmr-impl.src" location="${basedir}/impl/src/main/java"/>
    <property name="cmr-spi.src" location="${basedir}/spi/src/main/java"/>
    <property name="cmr-webdav.src" location="${basedir}/webdav/src/main/java"/>
    <property name="cmr-ceylon.src" location="${basedir}/ceylon/src/main/java"/>
    <property name="cmr-maven.src" location="${basedir}/maven/src/main/java"/>
    <property name="cmr-maven.resources" location="${basedir}/maven/src/main/resources"/>

    <property name="cmr-testsuite-test.src" location="${basedir}/testsuite/src/test/java"/>
    <property name="cmr-testsuite-test.resources" location="${basedir}/testsuite/src/test/resources"/>

    <property name="maven-test.src" location="${basedir}/maven/src/test/java"/>
    <property name="maven-test.resources" location="${basedir}/maven/src/test/resources"/>

    <tstamp/>

    <!-- ceylon.module-resolver -->
    <property name="module.module-resolver.name" value="com.redhat.ceylon.module-resolver"/>

    <!-- module archives -->
    <property name="ceylon.module-resolver.src"
              value="${ceylon.module-resolver.dir}/${module.module-resolver.name}-${module.com.redhat.ceylon.module-resolver.version}.src"/>
    <property name="ceylon.module-resolver.repo" value="${ceylon.repo.dir}/${ceylon.module-resolver.dir}"/>
    <property name="ceylon.module-resolver.dist" value="${build.dist.repo}/${ceylon.module-resolver.dir}"/>

    <path id="compiler.classpath">
        <pathelement path="${ceylon.common.lib}"/>
        <pathelement path="${ceylon.model.lib}"/>
        <pathelement path="${ceylon.module-resolver-aether.lib}"/>
        <pathelement path="${ceylon.module-resolver-webdav.lib}"/>
        <pathelement path="${ceylon.module-resolver-javascript.lib}"/>
        <pathelement path="${ceylon.classfile.lib}"/>
    </path>

    <path id="test.build.classpath">
        <path refid="compiler.classpath"/>
        <pathelement path="${build.classes}"/>
        <pathelement path="${junit.lib}"/>
    </path>

    <path id="test.run.classpath">
        <path refid="test.build.classpath"/>
        <pathelement path="${cmr-testsuite-test.resources}"/>
        <pathelement path="${build.test}"/>
        <pathelement path="${hamcrest.lib}"/>
        <pathelement path="${maven-support.lib}"/>
        <pathelement path="${json.lib}" />
    </path>

    <!-- ################################################################## -->
    <!-- constant to declare a file binary for checksumsum -->
    <property name="checksum.binary-prefix" value=" *"/>
    <!-- Helper target, used to create a sha1 checksum file  -->
    <!-- Requires 'file' as a parameter. -->
    <target name="sha1sum">
        <fail unless="file"/>
        <fail if="filename"/>
        <fail if="value"/>
        <basename file="${file}" property="filename"/>
        <checksum file="${file}" property="value" algorithm="sha1"/>
        <echo file="${file}.sha1" message="${value}"/>
    </target>

    <!-- Rule to clean everything up -->
    <target name="clean" description="Clean up everything">
        <delete dir="${build.dir}"/>
        <delete dir="${cmr-testsuite-test.src}/repo/com"/>
    </target>

    <target name="bundle-proxy">
        <basename file="${archivePath}" property="archiveFileName"/>
        <property name="proxy-project" value="${eclipse.project.path}/required-bundle-proxies/${archiveFileName}"/>
        <mkdir dir="${proxy-project}"/>
        <delete failonerror="false" dir="${proxy-project}/META-INF"/>
        <copy toDir="${proxy-project}" overwrite="true">
            <zipfileset src="${archivePath}" includes="META-INF/**"/>
            <fileset file="${archivePath}"/>
        </copy>
        <manifest file="${proxy-project}/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Bundle-Classpath" value="${archiveFileName}"/>
        </manifest>
        <echo file="${proxy-project}/.project"><![CDATA[<projectDescription>
    <name>${archiveFileName}</name>
    <comment></comment>
    <projects>
    </projects>
    <buildSpec>
        <buildCommand>
            <name>org.eclipse.jdt.core.javabuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
        <buildCommand>
            <name>org.eclipse.pde.ManifestBuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
        <buildCommand>
            <name>org.eclipse.pde.SchemaBuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
    </buildSpec>
    <natures>
        <nature>org.eclipse.pde.PluginNature</nature>
        <nature>org.eclipse.jdt.core.javanature</nature>
    </natures>
    <linkedResources>
        <link>
            <name>project</name>
            <type>2</type>
            <locationURI>PARENT-3-PROJECT_LOC/ceylon/cmr</locationURI>
        </link>
    </linkedResources>
</projectDescription>]]></echo>     
        <echo file="${proxy-project}/.classpath"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<classpath>
    <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
    <classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
    <classpathentry exported="true" kind="lib" path="${archiveFileName}" sourcepath="project"/>
    <classpathentry kind="output" path="bin"/>
</classpath>]]></echo>     
        <echo file="${proxy-project}/.gitignore"><![CDATA[/META-INF
/${archiveFileName}
/.classpath
/.project
/.gitignore
/bin/]]></echo>     
    </target>
    	
    <target name="ide-quick-internal">
        <antcall target="bundle-proxy">
            <param name="archivePath" value="${ceylon.module-resolver.lib}"/>
        </antcall>
    </target>

    <target name="dist"
            depends="build"
            description="Create Ceylon module-resolver distribution">
        <mkdir dir="${ceylon.module-resolver.dist}"/>
        <zip destfile="${build.dist.repo}/${ceylon.module-resolver.src}">
            <fileset dir="${cmr-api.src}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${cmr-impl.src}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${cmr-spi.src}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${cmr-webdav.src}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${cmr-ceylon.src}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${cmr-maven.src}">
                <include name="**/*.java"/>
            </fileset>
        </zip>
        <antcall target="sha1sum">
            <param name="file" value="${build.dist.repo}/${ceylon.module-resolver.src}"/>
        </antcall>
        <antcall target="sha1sum">
            <param name="file" value="${ceylon.module-resolver.lib}"/>
        </antcall>
    </target>

    <!-- Repository targets -->
    <target name="publish"
            depends="clean.repo,init.repo,dist,publish-internal"
            description="Publish Ceylon module-resolver module to default repo">
    </target>

    <target name="publish-internal" depends="init.repo">
        <copy todir="${ceylon.repo.dir}" overwrite="true">
            <fileset dir="${build.dist.repo}"/>
        </copy>
    </target>

    <target name="init.repo"
            description="Create default local Ceylon module repositoryManager">
        <mkdir dir="${ceylon.module-resolver.repo}"/>
    </target>

    <target name="clean.repo"
            description="Clean default local Ceylon module repositoryManager">
        <delete file="${ceylon.module-resolver.lib}"/>
        <delete file="${ceylon.module-resolver.lib}.sha1"/>
        <delete file="${ceylon.repo.dir}/${ceylon.module-resolver.src}" />
        <delete file="${ceylon.repo.dir}/${ceylon.module-resolver.src}.sha1" />
    </target>

    <!-- Tasks related to building the module-resolver -->
    <!-- Rule to build module-resolver classes from their Java sources -->
    <target name="module-resolver.classes.api">
        <mkdir dir="${build.classes}"/>    
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${cmr-spi.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${cmr-api.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <copy todir="${build.classes}">
            <fileset dir="${cmr-api.resources}">
                <include name="**"/>
            </fileset>
        </copy>
    </target>
    
    <!-- Rule to build module-resolver classes from their Java sources -->
    <target name="module-resolver.classes" depends="module-resolver.classes.api">
        <mkdir dir="${build.classes}"/>

        <javac debug="true"
               encoding="UTF-8"
               srcdir="${cmr-impl.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${cmr-webdav.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${cmr-ceylon.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${cmr-maven.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <copy todir="${build.classes}">
            <fileset dir="${cmr-maven.resources}">
                <include name="**"/>
            </fileset>
        </copy>
    </target>

    <!-- Rule to build module-resolver jar -->
    <target name="module-resolver.jar" depends="module-resolver.classes">
        <tstamp>
            <format property="qualifier" timezone="GMT" pattern="yyyyMMdd-HHmm"/>
        </tstamp>        
        <jar destfile="${ceylon.module-resolver.lib}">
            <fileset dir="${build.classes}">
            </fileset>
            <manifest>
                <attribute name="Bundle-SymbolicName" value="com.redhat.ceylon.module-resolver"/>
                <attribute name="Bundle-Version" value="${module.com.redhat.ceylon.module-resolver.osgi.version}-${qualifier}"/>
            </manifest>
        </jar>
    </target>

    <!-- Rule to compile and test -->
    <target name="build" depends="module-resolver.jar"/>

    <target name="compile.tests">
        <mkdir dir="${build.test}"/>
        <javac debug="true"
               encoding="UTF-8"
               destdir="${build.test}"
               classpathref="test.build.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false">
            <src path="${cmr-testsuite-test.src}" />
            <src path="${maven-test.src}" />
        </javac>
        <copy todir="${build.test}">
            <fileset dir="${maven-test.resources}">
                <include name="**"/>
            </fileset>
        </copy>
    </target>

    <target name="test" depends="build,test-quick" description="Runs the JUnit tests">
    </target>

    <target name="test-quick" depends="compile.tests" description="Runs the JUnit tests">
        <mkdir dir="${test.reports}"/>
        <junit printsummary="yes" haltonfailure="no" failureproperty="test.failed" dir="${basedir}">
            <classpath refid="test.run.classpath"/>
            <syspropertyset>
                <propertyref prefix="ceylon.tests." />
            </syspropertyset>

            <formatter type="xml"/>

            <test
                name="com.redhat.ceylon.test.smoke.test.AllCmrTests"
                fork="yes"
                todir="${test.reports}" />
        </junit>

        <junitreport todir="${test.reports}">
            <fileset dir="${test.reports}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.reports}"/>
        </junitreport>

        <fail message="Test failure detected, check test results." if="test.failed" />
    </target>
</project>
