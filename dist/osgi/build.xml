<project name="Ceylon distribution OSGI Bundle" default="osgi" basedir=".">

    <property name="base.path" location="${basedir}/../../lib" />
    <property file="../../user-build.properties" />
    <property file="../../common-build.properties" />
    <property file="../lib/build.properties"/>

    <property name="name" value="Ceylon distribution OSGI bundle" />
    <property name="ceylon.repo.dir" location="${user.home}/.ceylon/repo" />
    <property name="ceylon.cache.repo" location="${user.home}/.ceylon/cache"/>
    <property name="ceylon.common.dir" value="com/redhat/ceylon/common/${module.com.redhat.ceylon.common.version}" />
    <property name="ceylon.common.jar" value="${ceylon.common.dir}/com.redhat.ceylon.common-${module.com.redhat.ceylon.common.version}.jar" />
    <property name="ceylon.common.lib" location="${ceylon.repo.dir}/${ceylon.common.jar}" />
    <property name="ceylon.model.dir" value="com/redhat/ceylon/model/${module.com.redhat.ceylon.model.version}" />
    <property name="ceylon.model.jar" value="${ceylon.model.dir}/com.redhat.ceylon.model-${module.com.redhat.ceylon.model.version}.jar" />
    <property name="ceylon.model.lib" location="${ceylon.repo.dir}/${ceylon.model.jar}" />
    <property name="ceylon.typechecker.dir" value="com/redhat/ceylon/typechecker/${module.com.redhat.ceylon.typechecker.version}" />
    <property name="ceylon.typechecker.jar" value="${ceylon.typechecker.dir}/com.redhat.ceylon.typechecker-${module.com.redhat.ceylon.typechecker.version}.jar" />
    <property name="ceylon.typechecker.lib" location="${ceylon.repo.dir}/${ceylon.typechecker.jar}" />
    <property name="ceylon.language.dir" value="ceylon/language/${module.ceylon.language.version}" />
    <property name="ceylon.language.car" value="${ceylon.language.dir}/ceylon.language-${module.ceylon.language.version}.car" />
    <property name="ceylon.language.lib" location="${ceylon.repo.dir}/${ceylon.language.car}" />
    <property name="ceylon.module-resolver.dir" value="com/redhat/ceylon/module-resolver/${module.com.redhat.ceylon.module-resolver.version}" />
    <property name="ceylon.module-resolver.jar" value="${ceylon.module-resolver.dir}/com.redhat.ceylon.module-resolver-${module.com.redhat.ceylon.module-resolver.version}.jar" />
    <property name="ceylon.module-resolver.lib" location="${ceylon.repo.dir}/${ceylon.module-resolver.jar}" />
    <property name="ceylon.compiler.dir" value="com/redhat/ceylon/compiler/java/${module.com.redhat.ceylon.compiler.version}" />
    <property name="ceylon.compiler.jar" value="${ceylon.compiler.dir}/com.redhat.ceylon.compiler.java-${module.com.redhat.ceylon.compiler.version}.jar" />
    <property name="ceylon.compiler.lib" location="${ceylon.repo.dir}/${ceylon.compiler.jar}" />
    <property name="ceylon.bootstrap.dir" value="ceylon/bootstrap/${module.ceylon.bootstrap.version}" />
    <property name="ceylon.bootstrap.jar" value="${ceylon.bootstrap.dir}/ceylon.bootstrap-${module.ceylon.bootstrap.version}.jar" />

    <!-- The Java source files for the OSGI-specific meta-model bootstrapper -->
    <property name="src" location="src" />


    <!-- Directories everything gets built into -->
    <property name="build" location="build" />
    <property name="build.classes" location="${build}/classes" />
    <property name="build.repo" location="${build}/tempForRepo" />
    <property name="build.configuration" location="${build}/configuration" />
    <property name="build.dist" location="${build}/dist" />
      <tstamp>
          <format property="qualifier" timezone="GMT" pattern="yyyyMMdd-HHmm"/>
      </tstamp>        
    <property name="ceylon.dist.osgi.jar" value="com.redhat.ceylon.dist_${module.com.redhat.ceylon.dist.osgi.osgi.version}-${qualifier}.jar" />
    <property name="ceylon.dist.osgi.repo.jar" value="com.redhat.ceylon.dist.repo_${module.com.redhat.ceylon.dist.osgi.osgi.version}-${qualifier}.jar" />
    <property name="p2" location="${basedir}/p2" />
    <property name="karaf" location="${basedir}/karaf" />
    <property name="repoDir" location="${basedir}/embeddedRepository" />
    <property name="build.dist.plugins" location="${build.dist}/plugins" />
    <property name="build.dist.features" location="${build.dist}/features" />

    <path id="classpath">
        <pathelement path="${ceylon.common.lib}" />
        <pathelement path="${ceylon.model.lib}" />
        <pathelement path="${ceylon.module-resolver.lib}" />
        <pathelement path="${ceylon.typechecker.lib}" />
        <pathelement path="${ceylon.language.lib}" />
        <pathelement path="${ceylon.compiler.lib}" />
        <pathelement path="${base.path}/org.osgi.core-4.3.1.jar" />
    </path>

    <taskdef resource="taskdef.properties">
        <classpath>
            <pathelement path="${base.path}/org.osgi.impl.bundle.repoindex.ant-2.1.2.jar" />
        </classpath>
    </taskdef>

    <taskdef name="bindex" classname="org.osgi.impl.bundle.bindex.ant.BindexTask"
          classpath="${base.path}/org.osgi.impl.bundle.bindex-2.2.0.jar"/>
	
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${base.path}/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>
    
    <property name="ceylon.ant.lib" location="${ceylon.dist.dir}/lib/ceylon-ant.jar"/>

    <path id="ant-tasks">
        <pathelement path="${ceylon.ant.lib}"/>
    </path>
    
    <typedef resource="com/redhat/ceylon/ant/antlib.xml" classpathref="ant-tasks"/>

    <!-- ################################################################## -->

    <!-- Rule to clean everything up -->
    <target name="clean">
        <delete failonerror="false" dir="${build}"/>
        <delete failonerror="false" dir="${repoDir}/repo"/>
        <delete failonerror="false" dir="${repoDir}/bin"/>
        <delete failonerror="false" dir="${base.path}/ceylon-bootstrap.jar"/>
    </target>

    <!-- Rule to build compiler classes from their Java sources -->
    <target name="classes">
        <mkdir dir="${build.classes}" />
        <javac srcdir="${src}" destdir="${build.classes}" debug="true" encoding="UTF-8" classpathref="classpath" target="${compile.java.target}" source="${compile.java.source}" bootclasspath="${compile.java.bootclasspath}" includeantruntime="true">
        </javac>
    </target>

    <!-- Rule to build osgi bundle jar -->
    <target name="updateManifest" >
        <copy todir="${basedir}/META-INF" overwrite="true">
            <fileset dir="${basedir}/meta-inf-templates">
                <include name="**" />
            </fileset>
            <filterset>
                <filter token="ceylon-version" value="${ceylon.osgi.version}"/>
            </filterset>
        </copy>

    	<copy todir="${build.classes}" >
            <fileset dir="${basedir}">
                <include name="META-INF/**" />
            </fileset>
        </copy>
        <replaceregexp file="${build.classes}/META-INF/MANIFEST.MF"
            match="(Bundle-Version: .*\-)qualifier"
            replace="\1${qualifier}"
            byline="true"/>

        <copy todir="${repoDir}/META-INF" overwrite="true">
            <fileset dir="${repoDir}/meta-inf-templates">
                <include name="**" />
            </fileset>
            <filterset>
                <filter token="ceylon-version" value="${ceylon.osgi.version}"/>
            </filterset>
        </copy>
    	<copy todir="${build.repo}" >
            <fileset dir="${repoDir}">
                <include name="META-INF/**" />
            </fileset>
        </copy>
        <replaceregexp file="${build.repo}/META-INF/MANIFEST.MF"
            match="(Bundle-Version: .*\-)qualifier"
            replace="\1${qualifier}"
            byline="true"/>
    </target>

    <!-- Rule to build osgi bundle jar -->
    <target name="build" depends="classes, updateManifest">
        <mkdir dir="${build}" />
        <mkdir dir="${repoDir}/repo" />
        <copy todir="${repoDir}/repo">
            <fileset dir="${ceylon.repo.dir}">
                <include name="**" />
            </fileset>
        </copy>
        <mkdir dir="${repoDir}/lib" />
        <copy todir="${repoDir}/lib">
            <fileset dir="${ceylon.dist.dir}/lib">
                <include name="**" />
            </fileset>
        </copy>
        <mkdir dir="${repoDir}/bin" />
        <copy todir="${repoDir}/bin">
            <fileset dir="${ceylon.bin.dir}">
                <include name="**" />
            </fileset>
        </copy>
        <copy todir="${basedir}">
            <fileset dir="${ceylon.dist.dir}">
                <include name="lib/ceylon-bootstrap.jar" />
            </fileset>
        </copy>
        <jar destfile="${build}/${ceylon.dist.osgi.jar}" 
            manifest="${build.classes}/META-INF/MANIFEST.MF">
            <fileset dir="${build.classes}" includes="**"/>
            <fileset dir="${ceylon.dist.dir}">
                <include name="lib/ceylon-bootstrap.jar" />
                <include name="repo/${ceylon-bootstrap.jar}" />
            </fileset>
        </jar>
        <ceylon-import-jar 
            module="org.osgi.core/4.3.1" 
            jar="${base.path}/org.osgi.core-4.3.1.jar"
            out="${repoDir}/repo"
            force="true"
            fork="true">
        </ceylon-import-jar>
        <copy todir="${build}">
            <fileset dir="${basedir}">
                <include name="module.properties" />
            </fileset>
            <filterset>
                <filter token="ceylon-version" value="${ceylon.version}"/>
            </filterset>
        </copy>
        <ceylon-import-jar 
            module="com.redhat.ceylon.dist/${module.com.redhat.ceylon.dist.osgi.version}" 
            jar="${build}/${ceylon.dist.osgi.jar}" 
            descriptor="${build}/module.properties"
            out="${repoDir}/repo"
            fork="true">
        </ceylon-import-jar>
        <jar destfile="${build}/${ceylon.dist.osgi.repo.jar}" 
            manifest="${build.repo}/META-INF/MANIFEST.MF">
            <zipfileset dir="${repoDir}/repo" prefix="repo">
                <include name="**" />
            </zipfileset>
            <zipfileset dir="${repoDir}/bin" prefix="bin">
                <include name="**" />
            </zipfileset>
            <zipfileset dir="${repoDir}/lib" prefix="lib">
                <include name="**" />
            </zipfileset>
        </jar>
    </target>

    <target name="copyModuleArchiveForOSGI">
        <loadproperties>
            <zipentry zipfile="${currentFile}" name="META-INF/MANIFEST.MF"/>
             <filterchain>
                <linecontainsregexp>
                    <regexp pattern="^(Bundle-SymbolicName)"/>
                </linecontainsregexp>
                 <replaceregex pattern="\s+$" replace=""/>
              </filterchain>
        </loadproperties>
        <loadproperties>
            <zipentry zipfile="${currentFile}" name="META-INF/MANIFEST.MF"/>
             <filterchain>
                <linecontainsregexp>
                    <regexp pattern="^(Bundle-Version)"/>
                </linecontainsregexp>
                 <replaceregex pattern="\s+$" replace=""/>
                 <replaceregex pattern=" (\d+)$" replace="\1.0.0"/>
                 <replaceregex pattern=" (\d+\.\d+)$" replace="\1.0"/>
              </filterchain>
        </loadproperties>
        <if>
            <isset property="Bundle-SymbolicName"/>
            <then>
                <copy file="${currentFile}" 
                    tofile="${build.dist.plugins}/${Bundle-SymbolicName}_${Bundle-Version}.jar" 
                    overwrite="true"/>
            </then>
        </if>
    </target>

    <property name="osgiRuntimeBundles">
        com.redhat.ceylon.dist
        ceylon.bootstrap
        ceylon.language
        com.redhat.ceylon.common
        com.redhat.ceylon.model
        com.redhat.ceylon.langtools.classfile
        com.redhat.ceylon.module-resolver
    </property>

	<target name="osgi" depends="clean,build" description="Create Ceylon Dist OSGI Bundle distribution" >
        <mkdir dir="${build.dist.plugins}" />
        <foreach target="copyModuleArchiveForOSGI" param="currentFile">
            <path>
                <fileset dir="${repoDir}/repo" includes="**/*.jar" excludes="**/org.osgi.core-4.3.1.jar"/>
                <fileset dir="${repoDir}/repo" includes="**/*.car"/>
            </path>
        </foreach>

        <copy file="${build}/${ceylon.dist.osgi.jar}" overwrite="true" 
            todir="${build.dist.plugins}">
        </copy>
        <copy file="${build}/${ceylon.dist.osgi.repo.jar}" overwrite="true" 
            todir="${build.dist.plugins}">
        </copy>
        <makeurl property="rootUrl" file="${build.dist}"/>
        <repoindex name="Ceylon Distribution Bundles - R5 OBR format"            
            out="${build.dist}/index.xml" 
            compressed="false"
            pretty="true"
            rooturl="${rootUrl}">
            <fileset dir="${build.dist.plugins}" includes="*.jar"/>            
        </repoindex>
        <bindex name="Ceylon Distribution Bundles - Old OBR format"
            quiet="true"
            repositoryFile="${build.dist}/repository.xml" 
            root="${build.dist}">
            <fileset dir="${build.dist.plugins}" includes="*.jar"/>
        </bindex>
        <ant target="generateFeatures" inheritall="true">
            <property name="feature.id" value="ceylon.distribution.runtime"/>
            <property name="feature.version" value="${module.com.redhat.ceylon.dist.osgi.osgi.version}"/>
            <property name="feature.version.ceylon" value="${module.com.redhat.ceylon.dist.osgi.version}"/>
            <property name="includedBundles" value="${osgiRuntimeBundles}"/>
            <property name="xslFile" value="${karaf}/generateKarafRuntimeDistributionFeature.xsl"/>
            <property name="feature.dir" value="${build.dist}"/>
            <property name="featureFile" value="${build.dist}/karaf-features.xml"/>
        </ant>
    </target>

    <target name="generateFeatures">
        <property name="feature.dir" value="${build.dist.features}/${feature.id}_${feature.version}"/>
        <mkdir dir="${feature.dir}"/>
        <property name="featureFile" value="${feature.dir}/feature.xml"/>
        <xslt style="${xslFile}" in="${build.dist}/index.xml" out="${featureFile}">
            <param name="featureId" expression="${feature.id}"/>
            <param name="featureVersion" expression="${feature.version}"/>
            <param name="ceylonVersion" expression="${feature.version.ceylon}"/>
            <param name="includedBundles" expression="${includedBundles}"/>
        </xslt>            
    </target>
    
    <!-- Rule to setup a plugins directory with required bundles -->
    <target name="osgi-p2" depends="osgi">
        <mkdir dir="${build.dist.features}"/>
        <ant target="generateFeatures" inheritall="true">
            <property name="feature.id" value="com.redhat.ceylon.dist.runtime.feature"/>
            <property name="feature.version" value="${module.com.redhat.ceylon.dist.osgi.osgi.version}-${qualifier}"/>
            <property name="includedBundles" value="${osgiRuntimeBundles}"/>
            <property name="xslFile" value="${p2}/generateRuntimeDistributionFeature.xsl"/>
        </ant>
        <ant target="generateFeatures" inheritall="true">
            <property name="feature.id" value="com.redhat.ceylon.dist.feature"/>
            <property name="feature.version" value="${module.com.redhat.ceylon.dist.osgi.osgi.version}-${qualifier}"/>
            <property name="includedBundles" value=""/>
            <property name="xslFile" value="${p2}/generateDistributionFeature.xsl"/>
        </ant>
        <ant target="generateFeatures" inheritall="true">
            <property name="feature.id" value="com.redhat.ceylon.dist.dependencies.feature"/>
            <property name="feature.version" value="${module.com.redhat.ceylon.dist.osgi.osgi.version}-${qualifier}"/>
            <property name="includedBundles" value=""/>
            <property name="xslFile" value="${p2}/generateFixedDependenciesFeature.xsl"/>
        </ant>
        <makeurl property="destinationRepository" file="${build.dist}"/>
        <makeurl property="categoryDefinition" file="${p2}/category.xml"/>
        <touch file="${build}/bundles.info"/>
        <makeurl property="bundlesInfoUrl" file="${build}/bundles.info"/>
        <ceylon-p2 
        	sysRep="${repoDir}/repo"
            out="${build.dist}"
        	repositoryName="Ceylon Distribution Bundles"
            categoryPrefix="com.redhat.ceylon.dist"
            categories="${p2}/category.xml"
            fork="true">
            <module name="com.redhat.ceylon.dist" version="${module.com.redhat.ceylon.dist.osgi.version}"/> 
            <module name="com.redhat.ceylon.dist.repo" version="${module.com.redhat.ceylon.dist.osgi.osgi.version}-${qualifier}"/> 
            <module name="ceylon.bootstrap" version="${module.ceylon.bootstrap.version}"/> 
            <module name="ceylon.runtime" version="${module.ceylon.runtime.version}"/> 
            <module name="com.redhat.ceylon.tool.provider" version="${module.com.redhat.ceylon.dist.osgi.version}"/>
            <module name="com.redhat.ceylon.compiler.java" version="${module.com.redhat.ceylon.dist.osgi.version}"/>
            <module name="com.redhat.ceylon.compiler.js" version="${module.com.redhat.ceylon.dist.osgi.version}"/>
            <module name="com.redhat.ceylon.typechecker" version="${module.com.redhat.ceylon.dist.osgi.version}"/>
            <module name="com.redhat.ceylon.java.main" version="${module.com.redhat.ceylon.dist.osgi.version}"/>
            <module name="com.redhat.ceylon.tools" version="${module.com.redhat.ceylon.dist.osgi.version}"/>
        </ceylon-p2>
    	<!--
        <exec dir="${basedir}" executable="eclipse" failonerror="true">
            <arg value="-noSplash"/>
            <arg value="-clean"/>
            <arg value="-console"/>
            <arg value="-consolelog"/>
            <arg value="- -launcher.suppressErrors"/>
            <arg value="-application"/>
            <arg value="org.eclipse.equinox.p2.publisher.FeaturesAndBundlesPublisher"/>
            <arg value="-metadataRepositoryName"/>
            <arg value="Ceylon Distribution Bundles"/>
            <arg value="-metadataRepository"/>
            <arg value="${destinationRepository}"/>
            <arg value="-artifactRepositoryName"/>
            <arg value="Ceylon Distribution Bundles"/>
            <arg value="-artifactRepository"/>
            <arg value="${destinationRepository}"/>
            <arg value="-source"/>
            <arg file="${build.dist}"/>
            <arg value="-publishArtifacts"/>
            <arg value="-append"/>
            <arg value="-vmargs"/>
            <arg value="-Dorg.eclipse.equinox.simpleconfigurator.configUrl=${bundlesInfoUrl}"/>
            <arg value="-Dosgi.bundles=${bundlesToStart}"/>
        </exec>
        <exec dir="${basedir}" executable="eclipse">
            <arg value="-noSplash"/>
<!- -            <arg value="-clean"/> - ->
            <arg value="-console"/>
            <arg value="-consolelog"/>
            <arg value="- -launcher.suppressErrors"/>
            <arg value="-application"/>
            <arg value="org.eclipse.equinox.p2.publisher.CategoryPublisher"/>
            <arg value="-metadataRepository"/>
            <arg value="${destinationRepository}"/>
            <arg value="-categoryDefinition"/>
            <arg value="${categoryDefinition}"/>
            <arg value="-categoryQualifier"/>
            <arg value="com.redhat.ceylon.dist"/>
            <arg value="-vmargs"/>
        	<arg value="-Dorg.eclipse.equinox.simpleconfigurator.configUrl=${bundlesInfoUrl}"/>
            <arg value="-Dosgi.bundles=${bundlesToStart}"/>
        </exec>
        -->
    </target>
</project>
